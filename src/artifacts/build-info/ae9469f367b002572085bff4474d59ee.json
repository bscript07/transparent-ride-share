{
	"id": "ae9469f367b002572085bff4474d59ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/ContractFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport {Clones} from \"@openzeppelin/contracts/proxy/Clones.sol\";\n\nerror NotHR();\nerror InitializationFailed();\n\ncontract ContractFactory {\n    using Clones for address;\n\n    address public implementation;\n    address public hr;\n\n    event ProxyCreated(address proxy, address director);\n\n    constructor(address _implementation, address _hr) {\n        implementation = _implementation;\n        hr = _hr;\n    }\n\n    modifier onlyHR() {\n        require(msg.sender == hr, NotHR());\n        _;\n    }\n\n    function createProxy(address _director, address _priceFeed, string memory _departmentName)\n        external\n        onlyHR\n        returns (address proxy)\n    {\n        proxy = implementation.clone();\n\n        (bool success,) = proxy.call(\n            abi.encodeWithSignature(\n                \"initialize(address,address,address,string)\", hr, _director, _priceFeed, _departmentName\n            )\n        );\n        require(success, InitializationFailed());\n\n        emit ProxyCreated(proxy, _director);\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
				"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
				"@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/"
			],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122065012259e151d0d4fdf974ab4664951a2cd4ae9222bc281f0821b54be96ef52364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122065012259e151d0d4fdf974ab4664951a2cd4ae9222bc281f0821b54be96ef52364736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x12259E151D0 0xD4 REVERT 0xF9 PUSH21 0xAB4664951A2CD4AE9222BC281F0821B54BE96EF523 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122065012259e151d0d4fdf974ab4664951a2cd4ae9222bc281f0821b54be96ef52364736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x12259E151D0 0xD4 REVERT 0xF9 PUSH21 0xAB4664951A2CD4AE9222BC281F0821B54BE96EF523 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065012259e151d0d4fdf974ab4664951a2cd4ae9222bc281f0821b54be96ef52364736f6c634300081c0033",
									".code": [
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
								"lib/openzeppelin-contracts/contracts/utils/Create2.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"src/ContractFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212209a205ead418422764184cff98010907fd37c669826d7296402dc84d4b9ec533c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209a205ead418422764184cff98010907fd37c669826d7296402dc84d4b9ec533c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 KECCAK256 MCOPY 0xAD COINBASE DUP5 0x22 PUSH23 0x4184CFF98010907FD37C669826D7296402DC84D4B9EC53 EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209a205ead418422764184cff98010907fd37c669826d7296402dc84d4b9ec533c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 KECCAK256 MCOPY 0xAD COINBASE DUP5 0x22 PUSH23 0x4184CFF98010907FD37C669826D7296402DC84D4B9EC53 EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a205ead418422764184cff98010907fd37c669826d7296402dc84d4b9ec533c64736f6c634300081c0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
								"lib/openzeppelin-contracts/contracts/utils/Create2.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"src/ContractFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f1249ea07c4988031960b1c8a93cc4c9d64e8b02ef010b5bed084b018b8b920364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1249ea07c4988031960b1c8a93cc4c9d64e8b02ef010b5bed084b018b8b920364736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x24 SWAP15 LOG0 PUSH29 0x4988031960B1C8A93CC4C9D64E8B02EF010B5BED084B018B8B92036473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f1249ea07c4988031960b1c8a93cc4c9d64e8b02ef010b5bed084b018b8b920364736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0x24 SWAP15 LOG0 PUSH29 0x4988031960B1C8A93CC4C9D64E8B02EF010B5BED084B018B8B92036473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1249ea07c4988031960b1c8a93cc4c9d64e8b02ef010b5bed084b018b8b920364736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
								"lib/openzeppelin-contracts/contracts/utils/Create2.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"src/ContractFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ContractFactory.sol": {
				"ContractFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_hr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InitializationFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotHR",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "director",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_director",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_departmentName",
									"type": "string"
								}
							],
							"name": "createProxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxy",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/ContractFactory.sol\":169:1067  contract ContractFactory {... */\n  mstore(0x40, 0x80)\n    /* \"src/ContractFactory.sol\":348:465  constructor(address _implementation, address _hr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/ContractFactory.sol\":425:440  _implementation */\n  dup2\n    /* \"src/ContractFactory.sol\":408:422  implementation */\n  0x00\n  0x00\n    /* \"src/ContractFactory.sol\":408:440  implementation = _implementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/ContractFactory.sol\":455:458  _hr */\n  dup1\n    /* \"src/ContractFactory.sol\":450:452  hr */\n  0x01\n  0x00\n    /* \"src/ContractFactory.sol\":450:458  hr = _hr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/ContractFactory.sol\":348:465  constructor(address _implementation, address _hr) {... */\n  pop\n  pop\n    /* \"src/ContractFactory.sol\":169:1067  contract ContractFactory {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"src/ContractFactory.sol\":169:1067  contract ContractFactory {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/ContractFactory.sol\":169:1067  contract ContractFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c60da1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x71b727d5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x88d6f08d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/ContractFactory.sol\":231:260  address public implementation */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ContractFactory.sol\":266:283  address public hr */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ContractFactory.sol\":557:1065  function createProxy(address _director, address _priceFeed, string memory _departmentName)... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ContractFactory.sol\":231:260  address public implementation */\n    tag_7:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/ContractFactory.sol\":266:283  address public hr */\n    tag_11:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/ContractFactory.sol\":557:1065  function createProxy(address _director, address _priceFeed, string memory _departmentName)... */\n    tag_16:\n        /* \"src/ContractFactory.sol\":697:710  address proxy */\n      0x00\n        /* \"src/ContractFactory.sol\":521:523  hr */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/ContractFactory.sol\":507:523  msg.sender == hr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/ContractFactory.sol\":507:517  msg.sender */\n      caller\n        /* \"src/ContractFactory.sol\":507:523  msg.sender == hr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/ContractFactory.sol\":499:533  require(msg.sender == hr, NotHR()) */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x5c210ed500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"src/ContractFactory.sol\":734:756  implementation.clone() */\n      tag_21\n        /* \"src/ContractFactory.sol\":734:748  implementation */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/ContractFactory.sol\":734:754  implementation.clone */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_22\n        /* \"src/ContractFactory.sol\":734:756  implementation.clone() */\n      jump\t// in\n    tag_21:\n        /* \"src/ContractFactory.sol\":726:756  proxy = implementation.clone() */\n      swap1\n      pop\n        /* \"src/ContractFactory.sol\":768:780  bool success */\n      0x00\n        /* \"src/ContractFactory.sol\":785:790  proxy */\n      dup2\n        /* \"src/ContractFactory.sol\":785:795  proxy.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/ContractFactory.sol\":896:898  hr */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/ContractFactory.sol\":900:909  _director */\n      dup7\n        /* \"src/ContractFactory.sol\":911:921  _priceFeed */\n      dup7\n        /* \"src/ContractFactory.sol\":923:938  _departmentName */\n      dup7\n        /* \"src/ContractFactory.sol\":809:952  abi.encodeWithSignature(... */\n      add(0x24, mload(0x40))\n      tag_23\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x65e8e4f400000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/ContractFactory.sol\":785:962  proxy.call(... */\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_29\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_28)\n    tag_29:\n      0x60\n      swap2\n      pop\n    tag_28:\n      pop\n        /* \"src/ContractFactory.sol\":767:962  (bool success,) = proxy.call(... */\n      pop\n      swap1\n      pop\n        /* \"src/ContractFactory.sol\":980:987  success */\n      dup1\n        /* \"src/ContractFactory.sol\":972:1012  require(success, InitializationFailed()) */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x19b991a800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"src/ContractFactory.sol\":1028:1058  ProxyCreated(proxy, _director) */\n      0x9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e\n        /* \"src/ContractFactory.sol\":1041:1046  proxy */\n      dup3\n        /* \"src/ContractFactory.sol\":1048:1057  _director */\n      dup7\n        /* \"src/ContractFactory.sol\":1028:1058  ProxyCreated(proxy, _director) */\n      mload(0x40)\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/ContractFactory.sol\":716:1065  {... */\n      pop\n        /* \"src/ContractFactory.sol\":557:1065  function createProxy(address _director, address _priceFeed, string memory _departmentName)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n    tag_22:\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1127:1143  address instance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      tag_34\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1168:1182  implementation */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1184:1185  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1162:1167  clone */\n      tag_35\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      jump\t// in\n    tag_34:\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1155:1186  return clone(implementation, 0) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n    tag_35:\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1657:1673  address instance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1713:1718  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1689:1710  address(this).balance */\n      selfbalance\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1689:1718  address(this).balance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n      iszero\n      tag_37\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1768:1789  address(this).balance */\n      selfbalance\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1791:1796  value */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n    tag_37:\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2094:2142  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2076:2090  implementation */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2070:2074  0x60 */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2066:2091  shl(0x60, implementation) */\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2060:2064  0xe8 */\n      0xe8\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2056:2092  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2053:2143  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2047:2051  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2040:2144  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2301:2333  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2284:2298  implementation */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2278:2282  0x78 */\n      0x78\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2274:2299  shl(0x78, implementation) */\n      shl\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2271:2334  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2265:2269  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2258:2335  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2380:2384  0x37 */\n      0x37\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2374:2378  0x09 */\n      0x09\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2367:2372  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2360:2385  create(value, 0x09, 0x37) */\n      create\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2348:2385  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2428:2429  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2408:2416  instance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n      tag_40\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2453:2478  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n    tag_40:\n        /* \"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_41:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_42:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_71\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_43:\n        /* \"#utility.yul\":328:352   */\n      tag_73\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_42\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_75\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_43\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:668   */\n    tag_44:\n        /* \"#utility.yul\":626:632   */\n      0x00\n        /* \"#utility.yul\":659:661   */\n      0x40\n        /* \"#utility.yul\":653:662   */\n      mload\n        /* \"#utility.yul\":643:662   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:668   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_45:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      0x00\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":797:914   */\n    tag_46:\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":896:908   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_47:\n        /* \"#utility.yul\":993:1017   */\n      tag_80\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_81:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_48:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_83\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_47\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1310   */\n    tag_49:\n        /* \"#utility.yul\":1302:1303   */\n      0x00\n        /* \"#utility.yul\":1299:1300   */\n      0x00\n        /* \"#utility.yul\":1292:1304   */\n      revert\n        /* \"#utility.yul\":1316:1433   */\n    tag_50:\n        /* \"#utility.yul\":1425:1426   */\n      0x00\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1427   */\n      revert\n        /* \"#utility.yul\":1439:1541   */\n    tag_51:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1531:1533   */\n      0x1f\n        /* \"#utility.yul\":1527:1534   */\n      not\n        /* \"#utility.yul\":1522:1524   */\n      0x1f\n        /* \"#utility.yul\":1515:1520   */\n      dup4\n        /* \"#utility.yul\":1511:1525   */\n      add\n        /* \"#utility.yul\":1507:1535   */\n      and\n        /* \"#utility.yul\":1497:1535   */\n      swap1\n      pop\n        /* \"#utility.yul\":1439:1541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1547:1727   */\n    tag_52:\n        /* \"#utility.yul\":1595:1672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1592:1593   */\n      0x00\n        /* \"#utility.yul\":1585:1673   */\n      mstore\n        /* \"#utility.yul\":1692:1696   */\n      0x41\n        /* \"#utility.yul\":1689:1690   */\n      0x04\n        /* \"#utility.yul\":1682:1697   */\n      mstore\n        /* \"#utility.yul\":1716:1720   */\n      0x24\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1706:1721   */\n      revert\n        /* \"#utility.yul\":1733:2014   */\n    tag_53:\n        /* \"#utility.yul\":1816:1843   */\n      tag_89\n        /* \"#utility.yul\":1838:1842   */\n      dup3\n        /* \"#utility.yul\":1816:1843   */\n      tag_51\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1808:1814   */\n      dup2\n        /* \"#utility.yul\":1804:1844   */\n      add\n        /* \"#utility.yul\":1946:1952   */\n      dup2\n        /* \"#utility.yul\":1934:1944   */\n      dup2\n        /* \"#utility.yul\":1931:1953   */\n      lt\n        /* \"#utility.yul\":1910:1928   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1898:1908   */\n      dup3\n        /* \"#utility.yul\":1895:1929   */\n      gt\n        /* \"#utility.yul\":1892:1954   */\n      or\n        /* \"#utility.yul\":1889:1977   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1957:1975   */\n      tag_91\n      tag_52\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1889:1977   */\n    tag_90:\n        /* \"#utility.yul\":1997:2007   */\n      dup1\n        /* \"#utility.yul\":1993:1995   */\n      0x40\n        /* \"#utility.yul\":1986:2008   */\n      mstore\n        /* \"#utility.yul\":1776:2014   */\n      pop\n        /* \"#utility.yul\":1733:2014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2020:2149   */\n    tag_54:\n        /* \"#utility.yul\":2054:2060   */\n      0x00\n        /* \"#utility.yul\":2081:2101   */\n      tag_93\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2071:2101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2110:2143   */\n      tag_94\n        /* \"#utility.yul\":2138:2142   */\n      dup3\n        /* \"#utility.yul\":2130:2136   */\n      dup3\n        /* \"#utility.yul\":2110:2143   */\n      tag_53\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2020:2149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:2463   */\n    tag_55:\n        /* \"#utility.yul\":2217:2221   */\n      0x00\n        /* \"#utility.yul\":2307:2325   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2299:2305   */\n      dup3\n        /* \"#utility.yul\":2296:2326   */\n      gt\n        /* \"#utility.yul\":2293:2349   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2329:2347   */\n      tag_97\n      tag_52\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2293:2349   */\n    tag_96:\n        /* \"#utility.yul\":2367:2396   */\n      tag_98\n        /* \"#utility.yul\":2389:2395   */\n      dup3\n        /* \"#utility.yul\":2367:2396   */\n      tag_51\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2359:2396   */\n      swap1\n      pop\n        /* \"#utility.yul\":2451:2455   */\n      0x20\n        /* \"#utility.yul\":2445:2449   */\n      dup2\n        /* \"#utility.yul\":2441:2456   */\n      add\n        /* \"#utility.yul\":2433:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2155:2463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2469:2617   */\n    tag_56:\n        /* \"#utility.yul\":2567:2573   */\n      dup3\n        /* \"#utility.yul\":2562:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2560   */\n      dup4\n        /* \"#utility.yul\":2544:2574   */\n      calldatacopy\n        /* \"#utility.yul\":2608:2609   */\n      0x00\n        /* \"#utility.yul\":2599:2605   */\n      dup4\n        /* \"#utility.yul\":2594:2597   */\n      dup4\n        /* \"#utility.yul\":2590:2606   */\n      add\n        /* \"#utility.yul\":2583:2610   */\n      mstore\n        /* \"#utility.yul\":2469:2617   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:3048   */\n    tag_57:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2792   */\n      tag_101\n        /* \"#utility.yul\":2742:2791   */\n      tag_102\n        /* \"#utility.yul\":2784:2790   */\n      dup5\n        /* \"#utility.yul\":2742:2791   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2726:2792   */\n      tag_54\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2717:2792   */\n      swap1\n      pop\n        /* \"#utility.yul\":2815:2821   */\n      dup3\n        /* \"#utility.yul\":2808:2813   */\n      dup2\n        /* \"#utility.yul\":2801:2822   */\n      mstore\n        /* \"#utility.yul\":2853:2857   */\n      0x20\n        /* \"#utility.yul\":2846:2851   */\n      dup2\n        /* \"#utility.yul\":2842:2858   */\n      add\n        /* \"#utility.yul\":2891:2894   */\n      dup5\n        /* \"#utility.yul\":2882:2888   */\n      dup5\n        /* \"#utility.yul\":2877:2880   */\n      dup5\n        /* \"#utility.yul\":2873:2889   */\n      add\n        /* \"#utility.yul\":2870:2895   */\n      gt\n        /* \"#utility.yul\":2867:2979   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2898:2977   */\n      tag_104\n      tag_50\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2867:2979   */\n    tag_103:\n        /* \"#utility.yul\":2988:3042   */\n      tag_105\n        /* \"#utility.yul\":3035:3041   */\n      dup5\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":3025:3028   */\n      dup6\n        /* \"#utility.yul\":2988:3042   */\n      tag_56\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2707:3048   */\n      pop\n        /* \"#utility.yul\":2623:3048   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3408   */\n    tag_58:\n        /* \"#utility.yul\":3124:3129   */\n      0x00\n        /* \"#utility.yul\":3173:3176   */\n      dup3\n        /* \"#utility.yul\":3166:3170   */\n      0x1f\n        /* \"#utility.yul\":3158:3164   */\n      dup4\n        /* \"#utility.yul\":3154:3171   */\n      add\n        /* \"#utility.yul\":3150:3177   */\n      slt\n        /* \"#utility.yul\":3140:3262   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3181:3260   */\n      tag_108\n      tag_49\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3140:3262   */\n    tag_107:\n        /* \"#utility.yul\":3298:3304   */\n      dup2\n        /* \"#utility.yul\":3285:3305   */\n      calldataload\n        /* \"#utility.yul\":3323:3402   */\n      tag_109\n        /* \"#utility.yul\":3398:3401   */\n      dup5\n        /* \"#utility.yul\":3390:3396   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x20\n        /* \"#utility.yul\":3375:3381   */\n      dup7\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3323:3402   */\n      tag_57\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3314:3402   */\n      swap2\n      pop\n        /* \"#utility.yul\":3130:3408   */\n      pop\n        /* \"#utility.yul\":3068:3408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3414:4213   */\n    tag_15:\n        /* \"#utility.yul\":3501:3507   */\n      0x00\n        /* \"#utility.yul\":3509:3515   */\n      0x00\n        /* \"#utility.yul\":3517:3523   */\n      0x00\n        /* \"#utility.yul\":3566:3568   */\n      0x60\n        /* \"#utility.yul\":3554:3563   */\n      dup5\n        /* \"#utility.yul\":3545:3552   */\n      dup7\n        /* \"#utility.yul\":3541:3564   */\n      sub\n        /* \"#utility.yul\":3537:3569   */\n      slt\n        /* \"#utility.yul\":3534:3653   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3572:3651   */\n      tag_112\n      tag_45\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3534:3653   */\n    tag_111:\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3717:3770   */\n      tag_113\n        /* \"#utility.yul\":3762:3769   */\n      dup7\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3742:3751   */\n      dup8\n        /* \"#utility.yul\":3738:3760   */\n      add\n        /* \"#utility.yul\":3717:3770   */\n      tag_48\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3707:3770   */\n      swap4\n      pop\n        /* \"#utility.yul\":3663:3780   */\n      pop\n        /* \"#utility.yul\":3819:3821   */\n      0x20\n        /* \"#utility.yul\":3845:3898   */\n      tag_114\n        /* \"#utility.yul\":3890:3897   */\n      dup7\n        /* \"#utility.yul\":3881:3887   */\n      dup3\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3845:3898   */\n      tag_48\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3835:3898   */\n      swap3\n      pop\n        /* \"#utility.yul\":3790:3908   */\n      pop\n        /* \"#utility.yul\":3975:3977   */\n      0x40\n        /* \"#utility.yul\":3964:3973   */\n      dup5\n        /* \"#utility.yul\":3960:3978   */\n      add\n        /* \"#utility.yul\":3947:3979   */\n      calldataload\n        /* \"#utility.yul\":4006:4024   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3998:4004   */\n      dup2\n        /* \"#utility.yul\":3995:4025   */\n      gt\n        /* \"#utility.yul\":3992:4109   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":4028:4107   */\n      tag_116\n      tag_46\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3992:4109   */\n    tag_115:\n        /* \"#utility.yul\":4133:4196   */\n      tag_117\n        /* \"#utility.yul\":4188:4195   */\n      dup7\n        /* \"#utility.yul\":4179:4185   */\n      dup3\n        /* \"#utility.yul\":4168:4177   */\n      dup8\n        /* \"#utility.yul\":4164:4186   */\n      add\n        /* \"#utility.yul\":4133:4196   */\n      tag_58\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4123:4196   */\n      swap2\n      pop\n        /* \"#utility.yul\":3918:4206   */\n      pop\n        /* \"#utility.yul\":3414:4213   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4219:4318   */\n    tag_59:\n        /* \"#utility.yul\":4271:4277   */\n      0x00\n        /* \"#utility.yul\":4305:4310   */\n      dup2\n        /* \"#utility.yul\":4299:4311   */\n      mload\n        /* \"#utility.yul\":4289:4311   */\n      swap1\n      pop\n        /* \"#utility.yul\":4219:4318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4324:4493   */\n    tag_60:\n        /* \"#utility.yul\":4408:4419   */\n      0x00\n        /* \"#utility.yul\":4442:4448   */\n      dup3\n        /* \"#utility.yul\":4437:4440   */\n      dup3\n        /* \"#utility.yul\":4430:4449   */\n      mstore\n        /* \"#utility.yul\":4482:4486   */\n      0x20\n        /* \"#utility.yul\":4477:4480   */\n      dup3\n        /* \"#utility.yul\":4473:4487   */\n      add\n        /* \"#utility.yul\":4458:4487   */\n      swap1\n      pop\n        /* \"#utility.yul\":4324:4493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4499:4638   */\n    tag_61:\n        /* \"#utility.yul\":4588:4594   */\n      dup3\n        /* \"#utility.yul\":4583:4586   */\n      dup2\n        /* \"#utility.yul\":4578:4581   */\n      dup4\n        /* \"#utility.yul\":4572:4595   */\n      mcopy\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      dup4\n        /* \"#utility.yul\":4615:4618   */\n      dup4\n        /* \"#utility.yul\":4611:4627   */\n      add\n        /* \"#utility.yul\":4604:4631   */\n      mstore\n        /* \"#utility.yul\":4499:4638   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4644:5021   */\n    tag_62:\n        /* \"#utility.yul\":4732:4735   */\n      0x00\n        /* \"#utility.yul\":4760:4799   */\n      tag_122\n        /* \"#utility.yul\":4793:4798   */\n      dup3\n        /* \"#utility.yul\":4760:4799   */\n      tag_59\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4815:4886   */\n      tag_123\n        /* \"#utility.yul\":4879:4885   */\n      dup2\n        /* \"#utility.yul\":4874:4877   */\n      dup6\n        /* \"#utility.yul\":4815:4886   */\n      tag_60\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4808:4886   */\n      swap4\n      pop\n        /* \"#utility.yul\":4895:4960   */\n      tag_124\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4948:4951   */\n      dup6\n        /* \"#utility.yul\":4941:4945   */\n      0x20\n        /* \"#utility.yul\":4934:4939   */\n      dup7\n        /* \"#utility.yul\":4930:4946   */\n      add\n        /* \"#utility.yul\":4895:4960   */\n      tag_61\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4985:5014   */\n      tag_125\n        /* \"#utility.yul\":5007:5013   */\n      dup2\n        /* \"#utility.yul\":4985:5014   */\n      tag_51\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4980:4983   */\n      dup5\n        /* \"#utility.yul\":4976:5015   */\n      add\n        /* \"#utility.yul\":4969:5015   */\n      swap2\n      pop\n        /* \"#utility.yul\":4736:5021   */\n      pop\n        /* \"#utility.yul\":4644:5021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5027:5671   */\n    tag_24:\n        /* \"#utility.yul\":5224:5228   */\n      0x00\n        /* \"#utility.yul\":5262:5265   */\n      0x80\n        /* \"#utility.yul\":5251:5260   */\n      dup3\n        /* \"#utility.yul\":5247:5266   */\n      add\n        /* \"#utility.yul\":5239:5266   */\n      swap1\n      pop\n        /* \"#utility.yul\":5276:5347   */\n      tag_127\n        /* \"#utility.yul\":5344:5345   */\n      0x00\n        /* \"#utility.yul\":5333:5342   */\n      dup4\n        /* \"#utility.yul\":5329:5346   */\n      add\n        /* \"#utility.yul\":5320:5326   */\n      dup8\n        /* \"#utility.yul\":5276:5347   */\n      tag_43\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5357:5429   */\n      tag_128\n        /* \"#utility.yul\":5425:5427   */\n      0x20\n        /* \"#utility.yul\":5414:5423   */\n      dup4\n        /* \"#utility.yul\":5410:5428   */\n      add\n        /* \"#utility.yul\":5401:5407   */\n      dup7\n        /* \"#utility.yul\":5357:5429   */\n      tag_43\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5439:5511   */\n      tag_129\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5496:5505   */\n      dup4\n        /* \"#utility.yul\":5492:5510   */\n      add\n        /* \"#utility.yul\":5483:5489   */\n      dup6\n        /* \"#utility.yul\":5439:5511   */\n      tag_43\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5558:5567   */\n      dup2\n        /* \"#utility.yul\":5552:5556   */\n      dup2\n        /* \"#utility.yul\":5548:5568   */\n      sub\n        /* \"#utility.yul\":5543:5545   */\n      0x60\n        /* \"#utility.yul\":5532:5541   */\n      dup4\n        /* \"#utility.yul\":5528:5546   */\n      add\n        /* \"#utility.yul\":5521:5569   */\n      mstore\n        /* \"#utility.yul\":5586:5664   */\n      tag_130\n        /* \"#utility.yul\":5659:5663   */\n      dup2\n        /* \"#utility.yul\":5650:5656   */\n      dup5\n        /* \"#utility.yul\":5586:5664   */\n      tag_62\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5578:5664   */\n      swap1\n      pop\n        /* \"#utility.yul\":5027:5671   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5677:5775   */\n    tag_63:\n        /* \"#utility.yul\":5728:5734   */\n      0x00\n        /* \"#utility.yul\":5762:5767   */\n      dup2\n        /* \"#utility.yul\":5756:5768   */\n      mload\n        /* \"#utility.yul\":5746:5768   */\n      swap1\n      pop\n        /* \"#utility.yul\":5677:5775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5781:5928   */\n    tag_64:\n        /* \"#utility.yul\":5882:5893   */\n      0x00\n        /* \"#utility.yul\":5919:5922   */\n      dup2\n        /* \"#utility.yul\":5904:5922   */\n      swap1\n      pop\n        /* \"#utility.yul\":5781:5928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5934:6320   */\n    tag_65:\n        /* \"#utility.yul\":6038:6041   */\n      0x00\n        /* \"#utility.yul\":6066:6104   */\n      tag_134\n        /* \"#utility.yul\":6098:6103   */\n      dup3\n        /* \"#utility.yul\":6066:6104   */\n      tag_63\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":6120:6208   */\n      tag_135\n        /* \"#utility.yul\":6201:6207   */\n      dup2\n        /* \"#utility.yul\":6196:6199   */\n      dup6\n        /* \"#utility.yul\":6120:6208   */\n      tag_64\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6113:6208   */\n      swap4\n      pop\n        /* \"#utility.yul\":6217:6282   */\n      tag_136\n        /* \"#utility.yul\":6275:6281   */\n      dup2\n        /* \"#utility.yul\":6270:6273   */\n      dup6\n        /* \"#utility.yul\":6263:6267   */\n      0x20\n        /* \"#utility.yul\":6256:6261   */\n      dup7\n        /* \"#utility.yul\":6252:6268   */\n      add\n        /* \"#utility.yul\":6217:6282   */\n      tag_61\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6307:6313   */\n      dup1\n        /* \"#utility.yul\":6302:6305   */\n      dup5\n        /* \"#utility.yul\":6298:6314   */\n      add\n        /* \"#utility.yul\":6291:6314   */\n      swap2\n      pop\n        /* \"#utility.yul\":6042:6320   */\n      pop\n        /* \"#utility.yul\":5934:6320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6597   */\n    tag_26:\n        /* \"#utility.yul\":6456:6459   */\n      0x00\n        /* \"#utility.yul\":6478:6571   */\n      tag_138\n        /* \"#utility.yul\":6567:6570   */\n      dup3\n        /* \"#utility.yul\":6558:6564   */\n      dup5\n        /* \"#utility.yul\":6478:6571   */\n      tag_65\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6471:6571   */\n      swap2\n      pop\n        /* \"#utility.yul\":6588:6591   */\n      dup2\n        /* \"#utility.yul\":6581:6591   */\n      swap1\n      pop\n        /* \"#utility.yul\":6326:6597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6603:6935   */\n    tag_32:\n        /* \"#utility.yul\":6724:6728   */\n      0x00\n        /* \"#utility.yul\":6762:6764   */\n      0x40\n        /* \"#utility.yul\":6751:6760   */\n      dup3\n        /* \"#utility.yul\":6747:6765   */\n      add\n        /* \"#utility.yul\":6739:6765   */\n      swap1\n      pop\n        /* \"#utility.yul\":6775:6846   */\n      tag_140\n        /* \"#utility.yul\":6843:6844   */\n      0x00\n        /* \"#utility.yul\":6832:6841   */\n      dup4\n        /* \"#utility.yul\":6828:6845   */\n      add\n        /* \"#utility.yul\":6819:6825   */\n      dup6\n        /* \"#utility.yul\":6775:6846   */\n      tag_43\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6856:6928   */\n      tag_141\n        /* \"#utility.yul\":6924:6926   */\n      0x20\n        /* \"#utility.yul\":6913:6922   */\n      dup4\n        /* \"#utility.yul\":6909:6927   */\n      add\n        /* \"#utility.yul\":6900:6906   */\n      dup5\n        /* \"#utility.yul\":6856:6928   */\n      tag_43\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":6603:6935   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7018   */\n    tag_66:\n        /* \"#utility.yul\":6978:6985   */\n      0x00\n        /* \"#utility.yul\":7007:7012   */\n      dup2\n        /* \"#utility.yul\":6996:7012   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:7018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7142   */\n    tag_67:\n        /* \"#utility.yul\":7111:7135   */\n      tag_144\n        /* \"#utility.yul\":7129:7134   */\n      dup2\n        /* \"#utility.yul\":7111:7135   */\n      tag_66\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":7106:7109   */\n      dup3\n        /* \"#utility.yul\":7099:7136   */\n      mstore\n        /* \"#utility.yul\":7024:7142   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7148:7480   */\n    tag_39:\n        /* \"#utility.yul\":7269:7273   */\n      0x00\n        /* \"#utility.yul\":7307:7309   */\n      0x40\n        /* \"#utility.yul\":7296:7305   */\n      dup3\n        /* \"#utility.yul\":7292:7310   */\n      add\n        /* \"#utility.yul\":7284:7310   */\n      swap1\n      pop\n        /* \"#utility.yul\":7320:7391   */\n      tag_146\n        /* \"#utility.yul\":7388:7389   */\n      0x00\n        /* \"#utility.yul\":7377:7386   */\n      dup4\n        /* \"#utility.yul\":7373:7390   */\n      add\n        /* \"#utility.yul\":7364:7370   */\n      dup6\n        /* \"#utility.yul\":7320:7391   */\n      tag_67\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7401:7473   */\n      tag_147\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"#utility.yul\":7458:7467   */\n      dup4\n        /* \"#utility.yul\":7454:7472   */\n      add\n        /* \"#utility.yul\":7445:7451   */\n      dup5\n        /* \"#utility.yul\":7401:7473   */\n      tag_67\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7148:7480   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f804d6a4c29aaab903ab919a7c05f5df6d9417bddfb016c1f1af3935399d2a464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_556": {
									"entryPoint": null,
									"id": 556,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:4",
										"nodeType": "YulBlock",
										"src": "0:1355:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "939:413:4",
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:4",
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nativeSrc": "987:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nativeSrc": "987:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nativeSrc": "956:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:4",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nativeSrc": "952:32:4",
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nativeSrc": "949:119:4",
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nativeSrc": "1078:128:4",
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nativeSrc": "1093:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nativeSrc": "1164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nativeSrc": "1132:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:4",
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nativeSrc": "1231:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nativeSrc": "1303:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nativeSrc": "1271:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:4",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:4",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:4",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:4",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161099638038061099683398181016040528101906100319190610115565b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610153565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b6100f4816100da565b81146100fe575f5ffd5b50565b5f8151905061010f816100eb565b92915050565b5f5f6040838503121561012b5761012a6100b7565b5b5f61013885828601610101565b925050602061014985828601610101565b9150509250929050565b610836806101605f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80635c60da1b1461004357806371b727d51461006157806388d6f08d1461007f575b5f5ffd5b61004b6100af565b604051610058919061049a565b60405180910390f35b6100696100d3565b604051610076919061049a565b60405180910390f35b6100996004803603810190610094919061062a565b6100f8565b6040516100a6919061049a565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017f576040517f5c210ed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101be5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610354565b90505f8173ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686868660405160240161021094939291906106f6565b6040516020818303038152906040527f65e8e4f4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161029a9190610784565b5f604051808303815f865af19150503d805f81146102d3576040519150601f19603f3d011682016040523d82523d5f602084013e6102d8565b606091505b5050905080610313576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e828660405161034492919061079a565b60405180910390a1509392505050565b5f61035f825f610366565b9050919050565b5f814710156103ae5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016103a59291906107d9565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610455576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104848261045b565b9050919050565b6104948161047a565b82525050565b5f6020820190506104ad5f83018461048b565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b6104cd8161047a565b81146104d7575f5ffd5b50565b5f813590506104e8816104c4565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61053c826104f6565b810181811067ffffffffffffffff8211171561055b5761055a610506565b5b80604052505050565b5f61056d6104b3565b90506105798282610533565b919050565b5f67ffffffffffffffff82111561059857610597610506565b5b6105a1826104f6565b9050602081019050919050565b828183375f83830152505050565b5f6105ce6105c98461057e565b610564565b9050828152602081018484840111156105ea576105e96104f2565b5b6105f58482856105ae565b509392505050565b5f82601f830112610611576106106104ee565b5b81356106218482602086016105bc565b91505092915050565b5f5f5f60608486031215610641576106406104bc565b5b5f61064e868287016104da565b935050602061065f868287016104da565b925050604084013567ffffffffffffffff8111156106805761067f6104c0565b5b61068c868287016105fd565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6106c882610696565b6106d281856106a0565b93506106e28185602086016106b0565b6106eb816104f6565b840191505092915050565b5f6080820190506107095f83018761048b565b610716602083018661048b565b610723604083018561048b565b818103606083015261073581846106be565b905095945050505050565b5f81519050919050565b5f81905092915050565b5f61075e82610740565b610768818561074a565b93506107788185602086016106b0565b80840191505092915050565b5f61078f8284610754565b915081905092915050565b5f6040820190506107ad5f83018561048b565b6107ba602083018461048b565b9392505050565b5f819050919050565b6107d3816107c1565b82525050565b5f6040820190506107ec5f8301856107ca565b6107f960208301846107ca565b939250505056fea26469706673582212200f804d6a4c29aaab903ab919a7c05f5df6d9417bddfb016c1f1af3935399d2a464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x996 CODESIZE SUB DUP1 PUSH2 0x996 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x153 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 DUP1 PUSH2 0x160 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x71B727D5 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x88D6F08D EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C210ED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BE PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x354 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x210 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x65E8E4F400000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19B991A800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9678A1E87CA9F1A37DC659A97B39D812D98CD236947E1B53B3D0D6FD346ACB6E DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x344 SWAP3 SWAP2 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x35F DUP3 PUSH0 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x3AE JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP3 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x484 DUP3 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x494 DUP2 PUSH2 0x47A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AD PUSH0 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x47A JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E8 DUP2 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x53C DUP3 PUSH2 0x4F6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x506 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56D PUSH2 0x4B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP3 DUP3 PUSH2 0x533 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x506 JUMP JUMPDEST JUMPDEST PUSH2 0x5A1 DUP3 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE PUSH2 0x5C9 DUP5 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x5F5 DUP5 DUP3 DUP6 PUSH2 0x5AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x4EE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x621 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x641 JUMPI PUSH2 0x640 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x64E DUP7 DUP3 DUP8 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x65F DUP7 DUP3 DUP8 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x68C DUP7 DUP3 DUP8 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C8 DUP3 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x6D2 DUP2 DUP6 PUSH2 0x6A0 JUMP JUMPDEST SWAP4 POP PUSH2 0x6E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x6EB DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH0 DUP4 ADD DUP8 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x716 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x723 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x48B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x735 DUP2 DUP5 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP3 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP6 PUSH2 0x74A JUMP JUMPDEST SWAP4 POP PUSH2 0x778 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6B0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x78F DUP3 DUP5 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AD PUSH0 DUP4 ADD DUP6 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x7C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH0 DUP4 ADD DUP6 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP1 0x4D PUSH11 0x4C29AAAB903AB919A7C05F TSTORE 0xF6 0xD9 COINBASE PUSH28 0xDDFB016C1F1AF3935399D2A464736F6C634300081C00330000000000 ",
							"sourceMap": "169:898:3:-:0;;;348:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;425:15;408:14;;:32;;;;;;;;;;;;;;;;;;455:3;450:2;;:8;;;;;;;;;;;;;;;;;;348:117;;169:898;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;169:898:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@clone_22": {
									"entryPoint": 852,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_67": {
									"entryPoint": 870,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createProxy_614": {
									"entryPoint": 248,
									"id": 614,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hr_534": {
									"entryPoint": 211,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@implementation_532": {
									"entryPoint": 175,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptr": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7483:4",
										"nodeType": "YulBlock",
										"src": "0:7483:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "633:35:4",
													"nodeType": "YulBlock",
													"src": "633:35:4",
													"statements": [
														{
															"nativeSrc": "643:19:4",
															"nodeType": "YulAssignment",
															"src": "643:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:4",
																		"nodeType": "YulLiteral",
																		"src": "659:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:4"
																},
																"nativeSrc": "653:9:4",
																"nodeType": "YulFunctionCall",
																"src": "653:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:4",
														"nodeType": "YulTypedName",
														"src": "626:6:4",
														"type": ""
													}
												],
												"src": "593:75:4"
											},
											{
												"body": {
													"nativeSrc": "763:28:4",
													"nodeType": "YulBlock",
													"src": "763:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:4",
																		"nodeType": "YulLiteral",
																		"src": "780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:4",
																		"nodeType": "YulLiteral",
																		"src": "783:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:4"
																},
																"nativeSrc": "773:12:4",
																"nodeType": "YulFunctionCall",
																"src": "773:12:4"
															},
															"nativeSrc": "773:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:4"
											},
											{
												"body": {
													"nativeSrc": "886:28:4",
													"nodeType": "YulBlock",
													"src": "886:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:4",
																		"nodeType": "YulLiteral",
																		"src": "903:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:4",
																		"nodeType": "YulLiteral",
																		"src": "906:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:4"
																},
																"nativeSrc": "896:12:4",
																"nodeType": "YulFunctionCall",
																"src": "896:12:4"
															},
															"nativeSrc": "896:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:4"
											},
											{
												"body": {
													"nativeSrc": "963:79:4",
													"nodeType": "YulBlock",
													"src": "963:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:4",
																"nodeType": "YulBlock",
																"src": "1020:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:4"
																			},
																			"nativeSrc": "1022:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:4"
																		},
																		"nativeSrc": "1022:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:4"
																				},
																				"nativeSrc": "993:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:4"
																		},
																		"nativeSrc": "983:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:4"
																},
																"nativeSrc": "976:43:4",
																"nodeType": "YulFunctionCall",
																"src": "976:43:4"
															},
															"nativeSrc": "973:63:4",
															"nodeType": "YulIf",
															"src": "973:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:4",
														"nodeType": "YulTypedName",
														"src": "956:5:4",
														"type": ""
													}
												],
												"src": "920:122:4"
											},
											{
												"body": {
													"nativeSrc": "1100:87:4",
													"nodeType": "YulBlock",
													"src": "1100:87:4",
													"statements": [
														{
															"nativeSrc": "1110:29:4",
															"nodeType": "YulAssignment",
															"src": "1110:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:4"
																},
																"nativeSrc": "1119:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:4"
																},
																"nativeSrc": "1148:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:4"
															},
															"nativeSrc": "1148:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:4",
														"nodeType": "YulTypedName",
														"src": "1078:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:4",
														"nodeType": "YulTypedName",
														"src": "1086:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:4",
														"nodeType": "YulTypedName",
														"src": "1094:5:4",
														"type": ""
													}
												],
												"src": "1048:139:4"
											},
											{
												"body": {
													"nativeSrc": "1282:28:4",
													"nodeType": "YulBlock",
													"src": "1282:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1299:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1299:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1302:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1302:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1292:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:4"
																},
																"nativeSrc": "1292:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1292:12:4"
															},
															"nativeSrc": "1292:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1292:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1193:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1193:117:4"
											},
											{
												"body": {
													"nativeSrc": "1405:28:4",
													"nodeType": "YulBlock",
													"src": "1405:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1422:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1425:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1425:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1415:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:4"
																},
																"nativeSrc": "1415:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1415:12:4"
															},
															"nativeSrc": "1415:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1415:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1316:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1316:117:4"
											},
											{
												"body": {
													"nativeSrc": "1487:54:4",
													"nodeType": "YulBlock",
													"src": "1487:54:4",
													"statements": [
														{
															"nativeSrc": "1497:38:4",
															"nodeType": "YulAssignment",
															"src": "1497:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1515:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1515:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1522:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1522:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1511:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:4"
																		},
																		"nativeSrc": "1511:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1511:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1531:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1531:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1527:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:4"
																		},
																		"nativeSrc": "1527:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1507:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:4"
																},
																"nativeSrc": "1507:28:4",
																"nodeType": "YulFunctionCall",
																"src": "1507:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1497:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1439:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1470:5:4",
														"nodeType": "YulTypedName",
														"src": "1470:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1480:6:4",
														"nodeType": "YulTypedName",
														"src": "1480:6:4",
														"type": ""
													}
												],
												"src": "1439:102:4"
											},
											{
												"body": {
													"nativeSrc": "1575:152:4",
													"nodeType": "YulBlock",
													"src": "1575:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1592:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1592:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:77:4",
																		"nodeType": "YulLiteral",
																		"src": "1595:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1585:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:4"
																},
																"nativeSrc": "1585:88:4",
																"nodeType": "YulFunctionCall",
																"src": "1585:88:4"
															},
															"nativeSrc": "1585:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "1585:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1689:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1689:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1692:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1692:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1682:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1682:6:4"
																},
																"nativeSrc": "1682:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1682:15:4"
															},
															"nativeSrc": "1682:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1682:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1713:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1713:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1716:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1716:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1706:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:4"
																},
																"nativeSrc": "1706:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1706:15:4"
															},
															"nativeSrc": "1706:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1706:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1547:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1547:180:4"
											},
											{
												"body": {
													"nativeSrc": "1776:238:4",
													"nodeType": "YulBlock",
													"src": "1776:238:4",
													"statements": [
														{
															"nativeSrc": "1786:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1786:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1808:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1808:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1838:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1838:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1816:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "1816:21:4"
																		},
																		"nativeSrc": "1816:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1816:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1804:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:4"
																},
																"nativeSrc": "1804:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1804:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1790:10:4",
																	"nodeType": "YulTypedName",
																	"src": "1790:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1955:22:4",
																"nodeType": "YulBlock",
																"src": "1955:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1957:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1957:16:4"
																			},
																			"nativeSrc": "1957:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:18:4"
																		},
																		"nativeSrc": "1957:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1898:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1898:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1910:18:4",
																				"nodeType": "YulLiteral",
																				"src": "1910:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1895:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1895:2:4"
																		},
																		"nativeSrc": "1895:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1895:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1934:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1934:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1946:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1946:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1931:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1931:2:4"
																		},
																		"nativeSrc": "1931:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1931:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1892:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1892:2:4"
																},
																"nativeSrc": "1892:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1892:62:4"
															},
															"nativeSrc": "1889:88:4",
															"nodeType": "YulIf",
															"src": "1889:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1993:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1993:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1997:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "1997:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1986:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:4"
																},
																"nativeSrc": "1986:22:4",
																"nodeType": "YulFunctionCall",
																"src": "1986:22:4"
															},
															"nativeSrc": "1986:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "1986:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1733:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1762:6:4",
														"nodeType": "YulTypedName",
														"src": "1762:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1770:4:4",
														"nodeType": "YulTypedName",
														"src": "1770:4:4",
														"type": ""
													}
												],
												"src": "1733:281:4"
											},
											{
												"body": {
													"nativeSrc": "2061:88:4",
													"nodeType": "YulBlock",
													"src": "2061:88:4",
													"statements": [
														{
															"nativeSrc": "2071:30:4",
															"nodeType": "YulAssignment",
															"src": "2071:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2081:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2081:18:4"
																},
																"nativeSrc": "2081:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2081:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2071:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2130:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2130:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2138:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2138:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2110:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "2110:19:4"
																},
																"nativeSrc": "2110:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2110:33:4"
															},
															"nativeSrc": "2110:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2110:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2020:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2045:4:4",
														"nodeType": "YulTypedName",
														"src": "2045:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2054:6:4",
														"nodeType": "YulTypedName",
														"src": "2054:6:4",
														"type": ""
													}
												],
												"src": "2020:129:4"
											},
											{
												"body": {
													"nativeSrc": "2222:241:4",
													"nodeType": "YulBlock",
													"src": "2222:241:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2327:22:4",
																"nodeType": "YulBlock",
																"src": "2327:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2329:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2329:16:4"
																			},
																			"nativeSrc": "2329:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2329:18:4"
																		},
																		"nativeSrc": "2329:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2329:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2299:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2307:18:4",
																		"nodeType": "YulLiteral",
																		"src": "2307:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2296:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2296:2:4"
																},
																"nativeSrc": "2296:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2296:30:4"
															},
															"nativeSrc": "2293:56:4",
															"nodeType": "YulIf",
															"src": "2293:56:4"
														},
														{
															"nativeSrc": "2359:37:4",
															"nodeType": "YulAssignment",
															"src": "2359:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2389:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2367:21:4",
																	"nodeType": "YulIdentifier",
																	"src": "2367:21:4"
																},
																"nativeSrc": "2367:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2367:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2359:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2359:4:4"
																}
															]
														},
														{
															"nativeSrc": "2433:23:4",
															"nodeType": "YulAssignment",
															"src": "2433:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2445:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2445:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2451:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2451:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2441:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:4"
																},
																"nativeSrc": "2441:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2441:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2433:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2433:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2155:308:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2206:6:4",
														"nodeType": "YulTypedName",
														"src": "2206:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2217:4:4",
														"nodeType": "YulTypedName",
														"src": "2217:4:4",
														"type": ""
													}
												],
												"src": "2155:308:4"
											},
											{
												"body": {
													"nativeSrc": "2533:84:4",
													"nodeType": "YulBlock",
													"src": "2533:84:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2557:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2562:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2567:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2544:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:4"
																},
																"nativeSrc": "2544:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2544:30:4"
															},
															"nativeSrc": "2544:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2544:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2594:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2594:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2599:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2599:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2590:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2590:3:4"
																		},
																		"nativeSrc": "2590:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2590:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2608:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2608:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2583:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:4"
																},
																"nativeSrc": "2583:27:4",
																"nodeType": "YulFunctionCall",
																"src": "2583:27:4"
															},
															"nativeSrc": "2583:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "2583:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2469:148:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2515:3:4",
														"nodeType": "YulTypedName",
														"src": "2515:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2520:3:4",
														"nodeType": "YulTypedName",
														"src": "2520:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2525:6:4",
														"nodeType": "YulTypedName",
														"src": "2525:6:4",
														"type": ""
													}
												],
												"src": "2469:148:4"
											},
											{
												"body": {
													"nativeSrc": "2707:341:4",
													"nodeType": "YulBlock",
													"src": "2707:341:4",
													"statements": [
														{
															"nativeSrc": "2717:75:4",
															"nodeType": "YulAssignment",
															"src": "2717:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2784:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2784:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2742:41:4",
																			"nodeType": "YulIdentifier",
																			"src": "2742:41:4"
																		},
																		"nativeSrc": "2742:49:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2726:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:4"
																},
																"nativeSrc": "2726:66:4",
																"nodeType": "YulFunctionCall",
																"src": "2726:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2717:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2808:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2808:5:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2815:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2815:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:4"
																},
																"nativeSrc": "2801:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2801:21:4"
															},
															"nativeSrc": "2801:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2801:21:4"
														},
														{
															"nativeSrc": "2831:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2831:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2846:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2846:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2853:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2853:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2842:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:4"
																},
																"nativeSrc": "2842:16:4",
																"nodeType": "YulFunctionCall",
																"src": "2842:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2835:3:4",
																	"nodeType": "YulTypedName",
																	"src": "2835:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2896:83:4",
																"nodeType": "YulBlock",
																"src": "2896:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2898:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2898:77:4"
																			},
																			"nativeSrc": "2898:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2898:79:4"
																		},
																		"nativeSrc": "2898:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2898:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2877:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2877:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2882:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2882:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2873:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:4"
																		},
																		"nativeSrc": "2873:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2873:16:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2891:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2891:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2870:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2870:2:4"
																},
																"nativeSrc": "2870:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2870:25:4"
															},
															"nativeSrc": "2867:112:4",
															"nodeType": "YulIf",
															"src": "2867:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3025:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3025:3:4"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3030:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3035:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3035:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2988:36:4",
																	"nodeType": "YulIdentifier",
																	"src": "2988:36:4"
																},
																"nativeSrc": "2988:54:4",
																"nodeType": "YulFunctionCall",
																"src": "2988:54:4"
															},
															"nativeSrc": "2988:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "2988:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "2623:425:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2680:3:4",
														"nodeType": "YulTypedName",
														"src": "2680:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2685:6:4",
														"nodeType": "YulTypedName",
														"src": "2685:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2693:3:4",
														"nodeType": "YulTypedName",
														"src": "2693:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2701:5:4",
														"nodeType": "YulTypedName",
														"src": "2701:5:4",
														"type": ""
													}
												],
												"src": "2623:425:4"
											},
											{
												"body": {
													"nativeSrc": "3130:278:4",
													"nodeType": "YulBlock",
													"src": "3130:278:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3179:83:4",
																"nodeType": "YulBlock",
																"src": "3179:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3181:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3181:77:4"
																			},
																			"nativeSrc": "3181:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3181:79:4"
																		},
																		"nativeSrc": "3181:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3181:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3158:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3158:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3166:4:4",
																						"nodeType": "YulLiteral",
																						"src": "3166:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3154:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3154:3:4"
																				},
																				"nativeSrc": "3154:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3154:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3173:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3173:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3150:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:4"
																		},
																		"nativeSrc": "3150:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3150:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3143:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:4"
																},
																"nativeSrc": "3143:35:4",
																"nodeType": "YulFunctionCall",
																"src": "3143:35:4"
															},
															"nativeSrc": "3140:122:4",
															"nodeType": "YulIf",
															"src": "3140:122:4"
														},
														{
															"nativeSrc": "3271:34:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3271:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3298:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3298:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3285:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3285:12:4"
																},
																"nativeSrc": "3285:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3285:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3275:6:4",
																	"nodeType": "YulTypedName",
																	"src": "3275:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3314:88:4",
															"nodeType": "YulAssignment",
															"src": "3314:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3375:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3383:4:4",
																				"nodeType": "YulLiteral",
																				"src": "3383:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3371:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:4"
																		},
																		"nativeSrc": "3371:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:17:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3390:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3390:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3398:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3398:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "3323:47:4",
																	"nodeType": "YulIdentifier",
																	"src": "3323:47:4"
																},
																"nativeSrc": "3323:79:4",
																"nodeType": "YulFunctionCall",
																"src": "3323:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3314:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3314:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "3068:340:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3108:6:4",
														"nodeType": "YulTypedName",
														"src": "3108:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3116:3:4",
														"nodeType": "YulTypedName",
														"src": "3116:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3124:5:4",
														"nodeType": "YulTypedName",
														"src": "3124:5:4",
														"type": ""
													}
												],
												"src": "3068:340:4"
											},
											{
												"body": {
													"nativeSrc": "3524:689:4",
													"nodeType": "YulBlock",
													"src": "3524:689:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3570:83:4",
																"nodeType": "YulBlock",
																"src": "3570:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3572:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3572:77:4"
																			},
																			"nativeSrc": "3572:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3572:79:4"
																		},
																		"nativeSrc": "3572:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3545:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3545:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3554:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3541:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3541:3:4"
																		},
																		"nativeSrc": "3541:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3541:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3566:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3537:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:4"
																},
																"nativeSrc": "3537:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3537:32:4"
															},
															"nativeSrc": "3534:119:4",
															"nodeType": "YulIf",
															"src": "3534:119:4"
														},
														{
															"nativeSrc": "3663:117:4",
															"nodeType": "YulBlock",
															"src": "3663:117:4",
															"statements": [
																{
																	"nativeSrc": "3678:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3678:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3692:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3692:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3682:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3682:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3707:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3707:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3742:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3742:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3753:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3753:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3738:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3738:3:4"
																				},
																				"nativeSrc": "3738:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3738:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3762:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3762:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3717:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3717:20:4"
																		},
																		"nativeSrc": "3717:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3717:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3707:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3707:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3790:118:4",
															"nodeType": "YulBlock",
															"src": "3790:118:4",
															"statements": [
																{
																	"nativeSrc": "3805:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3805:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3819:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3819:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3809:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3809:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3835:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3835:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3870:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3870:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3881:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3881:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3866:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3866:3:4"
																				},
																				"nativeSrc": "3866:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3866:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3890:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3890:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3845:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3845:20:4"
																		},
																		"nativeSrc": "3845:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3835:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3835:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3918:288:4",
															"nodeType": "YulBlock",
															"src": "3918:288:4",
															"statements": [
																{
																	"nativeSrc": "3933:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3933:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3964:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3964:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3975:2:4",
																						"nodeType": "YulLiteral",
																						"src": "3975:2:4",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3960:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3960:3:4"
																				},
																				"nativeSrc": "3960:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3960:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3947:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "3947:12:4"
																		},
																		"nativeSrc": "3947:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3947:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3937:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3937:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4026:83:4",
																		"nodeType": "YulBlock",
																		"src": "4026:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4028:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "4028:77:4"
																					},
																					"nativeSrc": "4028:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "4028:79:4"
																				},
																				"nativeSrc": "4028:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "4028:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3998:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4006:18:4",
																				"nodeType": "YulLiteral",
																				"src": "4006:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3995:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3995:2:4"
																		},
																		"nativeSrc": "3995:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:30:4"
																	},
																	"nativeSrc": "3992:117:4",
																	"nodeType": "YulIf",
																	"src": "3992:117:4"
																},
																{
																	"nativeSrc": "4123:73:4",
																	"nodeType": "YulAssignment",
																	"src": "4123:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4164:3:4"
																				},
																				"nativeSrc": "4164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4133:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "4133:30:4"
																		},
																		"nativeSrc": "4133:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4133:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4123:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4123:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptr",
												"nativeSrc": "3414:799:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3478:9:4",
														"nodeType": "YulTypedName",
														"src": "3478:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3489:7:4",
														"nodeType": "YulTypedName",
														"src": "3489:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3501:6:4",
														"nodeType": "YulTypedName",
														"src": "3501:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3509:6:4",
														"nodeType": "YulTypedName",
														"src": "3509:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3517:6:4",
														"nodeType": "YulTypedName",
														"src": "3517:6:4",
														"type": ""
													}
												],
												"src": "3414:799:4"
											},
											{
												"body": {
													"nativeSrc": "4278:40:4",
													"nodeType": "YulBlock",
													"src": "4278:40:4",
													"statements": [
														{
															"nativeSrc": "4289:22:4",
															"nodeType": "YulAssignment",
															"src": "4289:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4299:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4299:5:4"
																},
																"nativeSrc": "4299:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4299:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4289:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4219:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:4",
														"nodeType": "YulTypedName",
														"src": "4261:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4271:6:4",
														"nodeType": "YulTypedName",
														"src": "4271:6:4",
														"type": ""
													}
												],
												"src": "4219:99:4"
											},
											{
												"body": {
													"nativeSrc": "4420:73:4",
													"nodeType": "YulBlock",
													"src": "4420:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4437:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4437:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4442:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4442:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4430:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:4"
																},
																"nativeSrc": "4430:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4430:19:4"
															},
															"nativeSrc": "4430:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4430:19:4"
														},
														{
															"nativeSrc": "4458:29:4",
															"nodeType": "YulAssignment",
															"src": "4458:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4477:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4477:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4482:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4482:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:4"
																},
																"nativeSrc": "4473:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4473:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4458:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4458:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4324:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4392:3:4",
														"nodeType": "YulTypedName",
														"src": "4392:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4397:6:4",
														"nodeType": "YulTypedName",
														"src": "4397:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4408:11:4",
														"nodeType": "YulTypedName",
														"src": "4408:11:4",
														"type": ""
													}
												],
												"src": "4324:169:4"
											},
											{
												"body": {
													"nativeSrc": "4561:77:4",
													"nodeType": "YulBlock",
													"src": "4561:77:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4578:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4583:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4583:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4588:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4588:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4572:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4572:5:4"
																},
																"nativeSrc": "4572:23:4",
																"nodeType": "YulFunctionCall",
																"src": "4572:23:4"
															},
															"nativeSrc": "4572:23:4",
															"nodeType": "YulExpressionStatement",
															"src": "4572:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4615:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4615:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4620:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4620:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4611:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:4"
																		},
																		"nativeSrc": "4611:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4629:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4629:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4604:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:4"
																},
																"nativeSrc": "4604:27:4",
																"nodeType": "YulFunctionCall",
																"src": "4604:27:4"
															},
															"nativeSrc": "4604:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "4604:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4499:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4543:3:4",
														"nodeType": "YulTypedName",
														"src": "4543:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4548:3:4",
														"nodeType": "YulTypedName",
														"src": "4548:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4553:6:4",
														"nodeType": "YulTypedName",
														"src": "4553:6:4",
														"type": ""
													}
												],
												"src": "4499:139:4"
											},
											{
												"body": {
													"nativeSrc": "4736:285:4",
													"nodeType": "YulBlock",
													"src": "4736:285:4",
													"statements": [
														{
															"nativeSrc": "4746:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4746:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4793:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4793:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4760:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "4760:32:4"
																},
																"nativeSrc": "4760:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4760:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4750:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4750:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4808:78:4",
															"nodeType": "YulAssignment",
															"src": "4808:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4874:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4874:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4879:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4879:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4815:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4815:58:4"
																},
																"nativeSrc": "4815:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4815:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4808:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4934:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4934:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4941:4:4",
																				"nodeType": "YulLiteral",
																				"src": "4941:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4930:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4930:3:4"
																		},
																		"nativeSrc": "4930:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4930:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4948:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4948:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4953:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4895:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "4895:34:4"
																},
																"nativeSrc": "4895:65:4",
																"nodeType": "YulFunctionCall",
																"src": "4895:65:4"
															},
															"nativeSrc": "4895:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "4895:65:4"
														},
														{
															"nativeSrc": "4969:46:4",
															"nodeType": "YulAssignment",
															"src": "4969:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4980:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4980:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5007:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5007:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4985:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "4985:21:4"
																		},
																		"nativeSrc": "4985:29:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4985:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4976:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:4"
																},
																"nativeSrc": "4976:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4976:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4969:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4644:377:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4717:5:4",
														"nodeType": "YulTypedName",
														"src": "4717:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4724:3:4",
														"nodeType": "YulTypedName",
														"src": "4724:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4732:3:4",
														"nodeType": "YulTypedName",
														"src": "4732:3:4",
														"type": ""
													}
												],
												"src": "4644:377:4"
											},
											{
												"body": {
													"nativeSrc": "5229:442:4",
													"nodeType": "YulBlock",
													"src": "5229:442:4",
													"statements": [
														{
															"nativeSrc": "5239:27:4",
															"nodeType": "YulAssignment",
															"src": "5239:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5251:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5251:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5262:3:4",
																		"nodeType": "YulLiteral",
																		"src": "5262:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5247:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:4"
																},
																"nativeSrc": "5247:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5247:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5239:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5239:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5320:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5333:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5344:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5344:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5329:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:4"
																		},
																		"nativeSrc": "5329:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5329:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5276:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5276:43:4"
																},
																"nativeSrc": "5276:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5276:71:4"
															},
															"nativeSrc": "5276:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5276:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5401:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5401:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5414:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5414:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5425:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5425:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5410:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5410:3:4"
																		},
																		"nativeSrc": "5410:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5410:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5357:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5357:43:4"
																},
																"nativeSrc": "5357:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5357:72:4"
															},
															"nativeSrc": "5357:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5357:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5483:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5483:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:4"
																		},
																		"nativeSrc": "5492:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5439:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5439:43:4"
																},
																"nativeSrc": "5439:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5439:72:4"
															},
															"nativeSrc": "5439:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5439:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5532:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5543:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5543:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5528:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:4"
																		},
																		"nativeSrc": "5528:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5552:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5552:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5558:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5558:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5548:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:4"
																		},
																		"nativeSrc": "5548:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5521:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:4"
																},
																"nativeSrc": "5521:48:4",
																"nodeType": "YulFunctionCall",
																"src": "5521:48:4"
															},
															"nativeSrc": "5521:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "5521:48:4"
														},
														{
															"nativeSrc": "5578:86:4",
															"nodeType": "YulAssignment",
															"src": "5578:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5650:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5650:6:4"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5659:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5659:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5586:63:4",
																	"nodeType": "YulIdentifier",
																	"src": "5586:63:4"
																},
																"nativeSrc": "5586:78:4",
																"nodeType": "YulFunctionCall",
																"src": "5586:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5578:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5578:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5027:644:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5177:9:4",
														"nodeType": "YulTypedName",
														"src": "5177:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5189:6:4",
														"nodeType": "YulTypedName",
														"src": "5189:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5197:6:4",
														"nodeType": "YulTypedName",
														"src": "5197:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5205:6:4",
														"nodeType": "YulTypedName",
														"src": "5205:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5213:6:4",
														"nodeType": "YulTypedName",
														"src": "5213:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5224:4:4",
														"nodeType": "YulTypedName",
														"src": "5224:4:4",
														"type": ""
													}
												],
												"src": "5027:644:4"
											},
											{
												"body": {
													"nativeSrc": "5735:40:4",
													"nodeType": "YulBlock",
													"src": "5735:40:4",
													"statements": [
														{
															"nativeSrc": "5746:22:4",
															"nodeType": "YulAssignment",
															"src": "5746:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5762:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5762:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5756:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5756:5:4"
																},
																"nativeSrc": "5756:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5756:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5746:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5677:98:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5718:5:4",
														"nodeType": "YulTypedName",
														"src": "5718:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5728:6:4",
														"nodeType": "YulTypedName",
														"src": "5728:6:4",
														"type": ""
													}
												],
												"src": "5677:98:4"
											},
											{
												"body": {
													"nativeSrc": "5894:34:4",
													"nodeType": "YulBlock",
													"src": "5894:34:4",
													"statements": [
														{
															"nativeSrc": "5904:18:4",
															"nodeType": "YulAssignment",
															"src": "5904:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "5919:3:4",
																"nodeType": "YulIdentifier",
																"src": "5919:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5904:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "5904:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5781:147:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5866:3:4",
														"nodeType": "YulTypedName",
														"src": "5866:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5871:6:4",
														"nodeType": "YulTypedName",
														"src": "5871:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5882:11:4",
														"nodeType": "YulTypedName",
														"src": "5882:11:4",
														"type": ""
													}
												],
												"src": "5781:147:4"
											},
											{
												"body": {
													"nativeSrc": "6042:278:4",
													"nodeType": "YulBlock",
													"src": "6042:278:4",
													"statements": [
														{
															"nativeSrc": "6052:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6052:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6098:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6098:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6066:31:4",
																	"nodeType": "YulIdentifier",
																	"src": "6066:31:4"
																},
																"nativeSrc": "6066:38:4",
																"nodeType": "YulFunctionCall",
																"src": "6066:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6056:6:4",
																	"nodeType": "YulTypedName",
																	"src": "6056:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6113:95:4",
															"nodeType": "YulAssignment",
															"src": "6113:95:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6196:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6196:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6201:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6201:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6120:75:4",
																	"nodeType": "YulIdentifier",
																	"src": "6120:75:4"
																},
																"nativeSrc": "6120:88:4",
																"nodeType": "YulFunctionCall",
																"src": "6120:88:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6113:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6256:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6256:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6263:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6263:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:4"
																		},
																		"nativeSrc": "6252:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6275:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6217:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "6217:34:4"
																},
																"nativeSrc": "6217:65:4",
																"nodeType": "YulFunctionCall",
																"src": "6217:65:4"
															},
															"nativeSrc": "6217:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "6217:65:4"
														},
														{
															"nativeSrc": "6291:23:4",
															"nodeType": "YulAssignment",
															"src": "6291:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6302:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6302:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6307:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6307:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6298:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:4"
																},
																"nativeSrc": "6298:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6298:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6291:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5934:386:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6023:5:4",
														"nodeType": "YulTypedName",
														"src": "6023:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6030:3:4",
														"nodeType": "YulTypedName",
														"src": "6030:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6038:3:4",
														"nodeType": "YulTypedName",
														"src": "6038:3:4",
														"type": ""
													}
												],
												"src": "5934:386:4"
											},
											{
												"body": {
													"nativeSrc": "6460:137:4",
													"nodeType": "YulBlock",
													"src": "6460:137:4",
													"statements": [
														{
															"nativeSrc": "6471:100:4",
															"nodeType": "YulAssignment",
															"src": "6471:100:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6558:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6558:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6567:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6567:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6478:79:4",
																	"nodeType": "YulIdentifier",
																	"src": "6478:79:4"
																},
																"nativeSrc": "6478:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6478:93:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6471:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6471:3:4"
																}
															]
														},
														{
															"nativeSrc": "6581:10:4",
															"nodeType": "YulAssignment",
															"src": "6581:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "6588:3:4",
																"nodeType": "YulIdentifier",
																"src": "6588:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6581:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6326:271:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6439:3:4",
														"nodeType": "YulTypedName",
														"src": "6439:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6445:6:4",
														"nodeType": "YulTypedName",
														"src": "6445:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6456:3:4",
														"nodeType": "YulTypedName",
														"src": "6456:3:4",
														"type": ""
													}
												],
												"src": "6326:271:4"
											},
											{
												"body": {
													"nativeSrc": "6729:206:4",
													"nodeType": "YulBlock",
													"src": "6729:206:4",
													"statements": [
														{
															"nativeSrc": "6739:26:4",
															"nodeType": "YulAssignment",
															"src": "6739:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6751:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6751:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6747:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:4"
																},
																"nativeSrc": "6747:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6747:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6739:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6739:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6819:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6819:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6832:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6832:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6843:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6843:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6828:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6828:3:4"
																		},
																		"nativeSrc": "6828:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6828:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6775:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6775:43:4"
																},
																"nativeSrc": "6775:71:4",
																"nodeType": "YulFunctionCall",
																"src": "6775:71:4"
															},
															"nativeSrc": "6775:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "6775:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6900:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6900:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6913:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6924:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6924:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6909:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:4"
																		},
																		"nativeSrc": "6909:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6909:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6856:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6856:43:4"
																},
																"nativeSrc": "6856:72:4",
																"nodeType": "YulFunctionCall",
																"src": "6856:72:4"
															},
															"nativeSrc": "6856:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "6856:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6603:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:4",
														"nodeType": "YulTypedName",
														"src": "6693:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6705:6:4",
														"nodeType": "YulTypedName",
														"src": "6705:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6713:6:4",
														"nodeType": "YulTypedName",
														"src": "6713:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6724:4:4",
														"nodeType": "YulTypedName",
														"src": "6724:4:4",
														"type": ""
													}
												],
												"src": "6603:332:4"
											},
											{
												"body": {
													"nativeSrc": "6986:32:4",
													"nodeType": "YulBlock",
													"src": "6986:32:4",
													"statements": [
														{
															"nativeSrc": "6996:16:4",
															"nodeType": "YulAssignment",
															"src": "6996:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "7007:5:4",
																"nodeType": "YulIdentifier",
																"src": "7007:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6996:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6996:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6941:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6968:5:4",
														"nodeType": "YulTypedName",
														"src": "6968:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6978:7:4",
														"nodeType": "YulTypedName",
														"src": "6978:7:4",
														"type": ""
													}
												],
												"src": "6941:77:4"
											},
											{
												"body": {
													"nativeSrc": "7089:53:4",
													"nodeType": "YulBlock",
													"src": "7089:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7106:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7129:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7129:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7111:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "7111:17:4"
																		},
																		"nativeSrc": "7111:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7111:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7099:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7099:6:4"
																},
																"nativeSrc": "7099:37:4",
																"nodeType": "YulFunctionCall",
																"src": "7099:37:4"
															},
															"nativeSrc": "7099:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "7099:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7024:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7077:5:4",
														"nodeType": "YulTypedName",
														"src": "7077:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7084:3:4",
														"nodeType": "YulTypedName",
														"src": "7084:3:4",
														"type": ""
													}
												],
												"src": "7024:118:4"
											},
											{
												"body": {
													"nativeSrc": "7274:206:4",
													"nodeType": "YulBlock",
													"src": "7274:206:4",
													"statements": [
														{
															"nativeSrc": "7284:26:4",
															"nodeType": "YulAssignment",
															"src": "7284:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7296:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7296:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7307:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7307:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7292:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:4"
																},
																"nativeSrc": "7292:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7292:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7284:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7284:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7364:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7364:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7388:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:4"
																		},
																		"nativeSrc": "7373:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7320:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7320:43:4"
																},
																"nativeSrc": "7320:71:4",
																"nodeType": "YulFunctionCall",
																"src": "7320:71:4"
															},
															"nativeSrc": "7320:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "7320:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7445:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7445:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7458:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7458:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7469:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7469:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7454:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7454:3:4"
																		},
																		"nativeSrc": "7454:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7454:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7401:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "7401:43:4"
																},
																"nativeSrc": "7401:72:4",
																"nodeType": "YulFunctionCall",
																"src": "7401:72:4"
															},
															"nativeSrc": "7401:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "7401:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7148:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7238:9:4",
														"nodeType": "YulTypedName",
														"src": "7238:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7250:6:4",
														"nodeType": "YulTypedName",
														"src": "7250:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7258:6:4",
														"nodeType": "YulTypedName",
														"src": "7258:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7269:4:4",
														"nodeType": "YulTypedName",
														"src": "7269:4:4",
														"type": ""
													}
												],
												"src": "7148:332:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80635c60da1b1461004357806371b727d51461006157806388d6f08d1461007f575b5f5ffd5b61004b6100af565b604051610058919061049a565b60405180910390f35b6100696100d3565b604051610076919061049a565b60405180910390f35b6100996004803603810190610094919061062a565b6100f8565b6040516100a6919061049a565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017f576040517f5c210ed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101be5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610354565b90505f8173ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686868660405160240161021094939291906106f6565b6040516020818303038152906040527f65e8e4f4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161029a9190610784565b5f604051808303815f865af19150503d805f81146102d3576040519150601f19603f3d011682016040523d82523d5f602084013e6102d8565b606091505b5050905080610313576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e828660405161034492919061079a565b60405180910390a1509392505050565b5f61035f825f610366565b9050919050565b5f814710156103ae5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016103a59291906107d9565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610455576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104848261045b565b9050919050565b6104948161047a565b82525050565b5f6020820190506104ad5f83018461048b565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b6104cd8161047a565b81146104d7575f5ffd5b50565b5f813590506104e8816104c4565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61053c826104f6565b810181811067ffffffffffffffff8211171561055b5761055a610506565b5b80604052505050565b5f61056d6104b3565b90506105798282610533565b919050565b5f67ffffffffffffffff82111561059857610597610506565b5b6105a1826104f6565b9050602081019050919050565b828183375f83830152505050565b5f6105ce6105c98461057e565b610564565b9050828152602081018484840111156105ea576105e96104f2565b5b6105f58482856105ae565b509392505050565b5f82601f830112610611576106106104ee565b5b81356106218482602086016105bc565b91505092915050565b5f5f5f60608486031215610641576106406104bc565b5b5f61064e868287016104da565b935050602061065f868287016104da565b925050604084013567ffffffffffffffff8111156106805761067f6104c0565b5b61068c868287016105fd565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6106c882610696565b6106d281856106a0565b93506106e28185602086016106b0565b6106eb816104f6565b840191505092915050565b5f6080820190506107095f83018761048b565b610716602083018661048b565b610723604083018561048b565b818103606083015261073581846106be565b905095945050505050565b5f81519050919050565b5f81905092915050565b5f61075e82610740565b610768818561074a565b93506107788185602086016106b0565b80840191505092915050565b5f61078f8284610754565b915081905092915050565b5f6040820190506107ad5f83018561048b565b6107ba602083018461048b565b9392505050565b5f819050919050565b6107d3816107c1565b82525050565b5f6040820190506107ec5f8301856107ca565b6107f960208301846107ca565b939250505056fea26469706673582212200f804d6a4c29aaab903ab919a7c05f5df6d9417bddfb016c1f1af3935399d2a464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x71B727D5 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x88D6F08D EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C210ED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BE PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x354 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x210 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x65E8E4F400000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19B991A800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9678A1E87CA9F1A37DC659A97B39D812D98CD236947E1B53B3D0D6FD346ACB6E DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x344 SWAP3 SWAP2 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x35F DUP3 PUSH0 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x3AE JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP3 SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x484 DUP3 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x494 DUP2 PUSH2 0x47A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AD PUSH0 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x47A JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E8 DUP2 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x53C DUP3 PUSH2 0x4F6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x506 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56D PUSH2 0x4B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP3 DUP3 PUSH2 0x533 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x506 JUMP JUMPDEST JUMPDEST PUSH2 0x5A1 DUP3 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE PUSH2 0x5C9 DUP5 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x5F5 DUP5 DUP3 DUP6 PUSH2 0x5AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x4EE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x621 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x641 JUMPI PUSH2 0x640 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x64E DUP7 DUP3 DUP8 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x65F DUP7 DUP3 DUP8 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x68C DUP7 DUP3 DUP8 ADD PUSH2 0x5FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C8 DUP3 PUSH2 0x696 JUMP JUMPDEST PUSH2 0x6D2 DUP2 DUP6 PUSH2 0x6A0 JUMP JUMPDEST SWAP4 POP PUSH2 0x6E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x6EB DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH0 DUP4 ADD DUP8 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x716 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x723 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x48B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x735 DUP2 DUP5 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP3 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP6 PUSH2 0x74A JUMP JUMPDEST SWAP4 POP PUSH2 0x778 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6B0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x78F DUP3 DUP5 PUSH2 0x754 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AD PUSH0 DUP4 ADD DUP6 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x7C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7EC PUSH0 DUP4 ADD DUP6 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP1 0x4D PUSH11 0x4C29AAAB903AB919A7C05F TSTORE 0xF6 0xD9 COINBASE PUSH28 0xDDFB016C1F1AF3935399D2A464736F6C634300081C00330000000000 ",
							"sourceMap": "169:898:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;266:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;557:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:29;;;;;;;;;;;;;:::o;266:17::-;;;;;;;;;;;;;:::o;557:508::-;697:13;521:2;;;;;;;;;;;507:16;;:10;:16;;;499:34;;;;;;;;;;;;;;;;;734:22:::1;:14;;;;;;;;;;;:20;;;:22::i;:::-;726:30;;768:12;785:5;:10;;896:2;;;;;;;;;;;900:9;911:10;923:15;809:143;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:177;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:195;;;980:7;972:40;;;;;;;;;;;;;;;;;1028:30;1041:5;1048:9;1028:30;;;;;;;:::i;:::-;;;;;;;;716:349;557:508:::0;;;;;:::o;1070:123:0:-;1127:16;1162:24;1168:14;1184:1;1162:5;:24::i;:::-;1155:31;;1070:123;;;:::o;1585:910::-;1657:16;1713:5;1689:21;:29;1685:123;;;1768:21;1791:5;1741:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1685:123;2094:48;2076:14;2070:4;2066:25;2060:4;2056:36;2053:90;2047:4;2040:104;2301:32;2284:14;2278:4;2274:25;2271:63;2265:4;2258:77;2380:4;2374;2367:5;2360:25;2348:37;;2428:1;2408:22;;:8;:22;;;2404:85;;2453:25;;;;;;;;;;;;;;2404:85;1585:910;;;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:117::-;1302:1;1299;1292:12;1316:117;1425:1;1422;1415:12;1439:102;1480:6;1531:2;1527:7;1522:2;1515:5;1511:14;1507:28;1497:38;;1439:102;;;:::o;1547:180::-;1595:77;1592:1;1585:88;1692:4;1689:1;1682:15;1716:4;1713:1;1706:15;1733:281;1816:27;1838:4;1816:27;:::i;:::-;1808:6;1804:40;1946:6;1934:10;1931:22;1910:18;1898:10;1895:34;1892:62;1889:88;;;1957:18;;:::i;:::-;1889:88;1997:10;1993:2;1986:22;1776:238;1733:281;;:::o;2020:129::-;2054:6;2081:20;;:::i;:::-;2071:30;;2110:33;2138:4;2130:6;2110:33;:::i;:::-;2020:129;;;:::o;2155:308::-;2217:4;2307:18;2299:6;2296:30;2293:56;;;2329:18;;:::i;:::-;2293:56;2367:29;2389:6;2367:29;:::i;:::-;2359:37;;2451:4;2445;2441:15;2433:23;;2155:308;;;:::o;2469:148::-;2567:6;2562:3;2557;2544:30;2608:1;2599:6;2594:3;2590:16;2583:27;2469:148;;;:::o;2623:425::-;2701:5;2726:66;2742:49;2784:6;2742:49;:::i;:::-;2726:66;:::i;:::-;2717:75;;2815:6;2808:5;2801:21;2853:4;2846:5;2842:16;2891:3;2882:6;2877:3;2873:16;2870:25;2867:112;;;2898:79;;:::i;:::-;2867:112;2988:54;3035:6;3030:3;3025;2988:54;:::i;:::-;2707:341;2623:425;;;;;:::o;3068:340::-;3124:5;3173:3;3166:4;3158:6;3154:17;3150:27;3140:122;;3181:79;;:::i;:::-;3140:122;3298:6;3285:20;3323:79;3398:3;3390:6;3383:4;3375:6;3371:17;3323:79;:::i;:::-;3314:88;;3130:278;3068:340;;;;:::o;3414:799::-;3501:6;3509;3517;3566:2;3554:9;3545:7;3541:23;3537:32;3534:119;;;3572:79;;:::i;:::-;3534:119;3692:1;3717:53;3762:7;3753:6;3742:9;3738:22;3717:53;:::i;:::-;3707:63;;3663:117;3819:2;3845:53;3890:7;3881:6;3870:9;3866:22;3845:53;:::i;:::-;3835:63;;3790:118;3975:2;3964:9;3960:18;3947:32;4006:18;3998:6;3995:30;3992:117;;;4028:79;;:::i;:::-;3992:117;4133:63;4188:7;4179:6;4168:9;4164:22;4133:63;:::i;:::-;4123:73;;3918:288;3414:799;;;;;:::o;4219:99::-;4271:6;4305:5;4299:12;4289:22;;4219:99;;;:::o;4324:169::-;4408:11;4442:6;4437:3;4430:19;4482:4;4477:3;4473:14;4458:29;;4324:169;;;;:::o;4499:139::-;4588:6;4583:3;4578;4572:23;4629:1;4620:6;4615:3;4611:16;4604:27;4499:139;;;:::o;4644:377::-;4732:3;4760:39;4793:5;4760:39;:::i;:::-;4815:71;4879:6;4874:3;4815:71;:::i;:::-;4808:78;;4895:65;4953:6;4948:3;4941:4;4934:5;4930:16;4895:65;:::i;:::-;4985:29;5007:6;4985:29;:::i;:::-;4980:3;4976:39;4969:46;;4736:285;4644:377;;;;:::o;5027:644::-;5224:4;5262:3;5251:9;5247:19;5239:27;;5276:71;5344:1;5333:9;5329:17;5320:6;5276:71;:::i;:::-;5357:72;5425:2;5414:9;5410:18;5401:6;5357:72;:::i;:::-;5439;5507:2;5496:9;5492:18;5483:6;5439:72;:::i;:::-;5558:9;5552:4;5548:20;5543:2;5532:9;5528:18;5521:48;5586:78;5659:4;5650:6;5586:78;:::i;:::-;5578:86;;5027:644;;;;;;;:::o;5677:98::-;5728:6;5762:5;5756:12;5746:22;;5677:98;;;:::o;5781:147::-;5882:11;5919:3;5904:18;;5781:147;;;;:::o;5934:386::-;6038:3;6066:38;6098:5;6066:38;:::i;:::-;6120:88;6201:6;6196:3;6120:88;:::i;:::-;6113:95;;6217:65;6275:6;6270:3;6263:4;6256:5;6252:16;6217:65;:::i;:::-;6307:6;6302:3;6298:16;6291:23;;6042:278;5934:386;;;;:::o;6326:271::-;6456:3;6478:93;6567:3;6558:6;6478:93;:::i;:::-;6471:100;;6588:3;6581:10;;6326:271;;;;:::o;6603:332::-;6724:4;6762:2;6751:9;6747:18;6739:26;;6775:71;6843:1;6832:9;6828:17;6819:6;6775:71;:::i;:::-;6856:72;6924:2;6913:9;6909:18;6900:6;6856:72;:::i;:::-;6603:332;;;;;:::o;6941:77::-;6978:7;7007:5;6996:16;;6941:77;;;:::o;7024:118::-;7111:24;7129:5;7111:24;:::i;:::-;7106:3;7099:37;7024:118;;:::o;7148:332::-;7269:4;7307:2;7296:9;7292:18;7284:26;;7320:71;7388:1;7377:9;7373:17;7364:6;7320:71;:::i;:::-;7401:72;7469:2;7458:9;7454:18;7445:6;7401:72;:::i;:::-;7148:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "420400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createProxy(address,address,string)": "infinite",
								"hr()": "2508",
								"implementation()": "2485"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 348,
									"end": 465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 348,
									"end": 465,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 425,
									"end": 440,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 408,
									"end": 422,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 408,
									"end": 422,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 408,
									"end": 440,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 408,
									"end": 440,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 408,
									"end": 440,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 408,
									"end": 440,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 408,
									"end": 440,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 455,
									"end": 458,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 450,
									"end": 452,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 458,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 450,
									"end": 458,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 458,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 458,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 450,
									"end": 458,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 348,
									"end": 465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 1067,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f804d6a4c29aaab903ab919a7c05f5df6d9417bddfb016c1f1af3935399d2a464736f6c634300081c0033",
									".code": [
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "5C60DA1B"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "71B727D5"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "88D6F08D"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 1067,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 557,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 557,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 283,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 697,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 521,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 517,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 523,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "5C210ED500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 499,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 734,
											"end": 754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 734,
											"end": 754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 734,
											"end": 756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 734,
											"end": 756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 734,
											"end": 756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 726,
											"end": 756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 726,
											"end": 756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 795,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 900,
											"end": 909,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 911,
											"end": 921,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 923,
											"end": 938,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "65E8E4F400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 809,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 785,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 767,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 767,
											"end": 962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 767,
											"end": 962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "19B991A800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 972,
											"end": 1012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9678A1E87CA9F1A37DC659A97B39D812D98CD236947E1B53B3D0D6FD346ACB6E"
										},
										{
											"begin": 1041,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1057,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1028,
											"end": 1058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1058,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 716,
											"end": 1065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1168,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1162,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1710,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1789,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1741,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2076,
											"end": 2090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2143,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2284,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 593,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 643,
											"end": 662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 643,
											"end": 662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 593,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 797,
											"end": 914,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 797,
											"end": 914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1193,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1433,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1316,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1439,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1547,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1720,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 2014,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1733,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1838,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1816,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1816,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1953,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1929,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1977,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1889,
											"end": 1977,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1957,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1977,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1889,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 2014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 2014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 2014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 2014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2149,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2020,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2138,
											"end": 2142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2110,
											"end": 2143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2143,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2110,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2155,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2326,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2349,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2349,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2329,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2329,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2349,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2367,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2396,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2367,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2617,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2469,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2557,
											"end": 2560,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2574,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2597,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2742,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2742,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2742,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2726,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2726,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2846,
											"end": 2851,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2894,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2880,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2979,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2867,
											"end": 2979,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2898,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2979,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2867,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3035,
											"end": 3041,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2988,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 3042,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2988,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3177,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3181,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3181,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3260,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3181,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3398,
											"end": 3401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3323,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3402,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3564,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3569,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3572,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3717,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3845,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3977,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 3973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4109,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3992,
											"end": 4109,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4028,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4028,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4107,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4028,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4109,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3992,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4188,
											"end": 4195,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4177,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4133,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4133,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 4206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3414,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4318,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4219,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4408,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4430,
											"end": 4449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4486,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4638,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4499,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4588,
											"end": 4594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4595,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4618,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4631,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4760,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4760,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4760,
											"end": 4799,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4760,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4879,
											"end": 4885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4877,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4815,
											"end": 4886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4886,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4815,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4808,
											"end": 4886,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4808,
											"end": 4886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4951,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4930,
											"end": 4946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4895,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4960,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4895,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4985,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5014,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4985,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 5021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5239,
											"end": 5266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5239,
											"end": 5266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5276,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5347,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5276,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5410,
											"end": 5428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5357,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5357,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5439,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5511,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5439,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5558,
											"end": 5567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5568,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5586,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5659,
											"end": 5663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5586,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5586,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5586,
											"end": 5664,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5586,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5775,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5677,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5781,
											"end": 5928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6098,
											"end": 6103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6066,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6066,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6066,
											"end": 6104,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6066,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6120,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6208,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6120,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6208,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6217,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6217,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6298,
											"end": 6314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6042,
											"end": 6320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6456,
											"end": 6459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 6478,
											"end": 6571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6843,
											"end": 6844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6841,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6845,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6775,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6846,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6775,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6900,
											"end": 6906,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6856,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6928,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6856,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6941,
											"end": 7018,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6941,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6978,
											"end": 6985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6941,
											"end": 7018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6941,
											"end": 7018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6941,
											"end": 7018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6941,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7142,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7024,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7129,
											"end": 7134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7111,
											"end": 7135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7111,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7099,
											"end": 7136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 7305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7386,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7320,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7320,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7467,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7454,
											"end": 7472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7401,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7473,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7401,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7148,
											"end": 7480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
								"lib/openzeppelin-contracts/contracts/utils/Create2.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"src/ContractFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createProxy(address,address,string)": "88d6f08d",
							"hr()": "71b727d5",
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotHR\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"director\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_director\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_departmentName\",\"type\":\"string\"}],\"name\":\"createProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ContractFactory.sol\":\"ContractFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"src/ContractFactory.sol\":{\"keccak256\":\"0x65110e92deef783d8bf9a08c1708fba71bb73709f7eecdd2f96516e02bbd199e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://661efdbe687e0a7073187943b83f847795eaba7ad367405cc2f6ad5ade14be2d\",\"dweb:/ipfs/QmRStCD44pY6dv4crYGJjdYFJuxRVCwWtrHUriLD5VMGje\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 532,
								"contract": "src/ContractFactory.sol:ContractFactory",
								"label": "implementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 534,
								"contract": "src/ContractFactory.sol:ContractFactory",
								"label": "hr",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1145:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1168:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1155:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:191:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1079:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1093:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1085:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1135:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:18:0"
									},
									"scope": 398,
									"src": "1070:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1675:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1697:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1703:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1689:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1685:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1720:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1776:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1768:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1768:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1768:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1782:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1768:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1791:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1748:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1741:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "1734:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1842:553:0",
													"nodeType": "YulBlock",
													"src": "1842:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2047:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2060:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2060:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2070:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2070:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2076:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2076:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2066:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2066:3:0"
																						},
																						"nativeSrc": "2066:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2066:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2056:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2056:3:0"
																				},
																				"nativeSrc": "2056:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2056:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2094:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2094:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2053:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2053:2:0"
																		},
																		"nativeSrc": "2053:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2040:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:0"
																},
																"nativeSrc": "2040:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2040:104:0"
															},
															"nativeSrc": "2040:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2040:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2278:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2278:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2284:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2284:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2274:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2274:3:0"
																				},
																				"nativeSrc": "2274:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2274:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2301:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2271:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2271:2:0"
																		},
																		"nativeSrc": "2271:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:0"
																},
																"nativeSrc": "2258:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2258:77:0"
															},
															"nativeSrc": "2258:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2258:77:0"
														},
														{
															"nativeSrc": "2348:37:0",
															"nodeType": "YulAssignment",
															"src": "2348:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2367:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2374:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2374:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2380:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2360:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:0"
																},
																"nativeSrc": "2360:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2360:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2348:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2284:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2348:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2367:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "1817:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2408:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "2404:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "2432:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2453:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2460:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2453:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "2446:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1199:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1594:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1608:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1600:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1657:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:18:0"
									},
									"scope": 398,
									"src": "1585:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2972:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3008:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "2989:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "2982:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2879:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2906:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2898:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:18:0"
									},
									"scope": 398,
									"src": "2870:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3612:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3626:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3640:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3626:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3650:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3626:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "3622:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "3657:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3713:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3705:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3705:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3705:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3719:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3705:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3685:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "3678:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "3671:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3779:560:0",
													"nodeType": "YulBlock",
													"src": "3779:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3984:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3984:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3997:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3997:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4007:4:0",
																								"nodeType": "YulLiteral",
																								"src": "4007:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "4013:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4013:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4003:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4003:3:0"
																						},
																						"nativeSrc": "4003:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "4003:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3993:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3993:3:0"
																				},
																				"nativeSrc": "3993:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3993:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4031:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4031:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3990:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3990:2:0"
																		},
																		"nativeSrc": "3990:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3990:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:0"
																},
																"nativeSrc": "3977:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3977:104:0"
															},
															"nativeSrc": "3977:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3977:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4202:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4221:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4221:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4211:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4211:3:0"
																				},
																				"nativeSrc": "4211:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4211:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4238:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4238:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4208:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4208:2:0"
																		},
																		"nativeSrc": "4208:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:0"
																},
																"nativeSrc": "4195:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4195:77:0"
															},
															"nativeSrc": "4195:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4195:77:0"
														},
														{
															"nativeSrc": "4285:44:0",
															"nodeType": "YulAssignment",
															"src": "4285:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4312:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4318:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4324:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4324:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4297:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:0"
																},
																"nativeSrc": "4297:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4297:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4285:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4285:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4013:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4221:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4285:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "4324:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "4305:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "3754:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4352:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "4348:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "4376:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "4397:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4404:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4397:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4397:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "4390:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3045:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3474:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3510:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3502:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3602:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3594:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:18:0"
									},
									"scope": 398,
									"src": "3465:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4714:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4749:496:0",
													"nodeType": "YulBlock",
													"src": "4749:496:0",
													"statements": [
														{
															"nativeSrc": "4763:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4763:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4780:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4780:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4774:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:0"
																},
																"nativeSrc": "4774:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4774:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4767:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4767:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4809:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4809:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4814:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:0"
																		},
																		"nativeSrc": "4805:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4821:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4821:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:0"
																},
																"nativeSrc": "4798:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4798:32:0"
															},
															"nativeSrc": "4798:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4798:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4854:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4854:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4859:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:0"
																		},
																		"nativeSrc": "4850:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4866:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:0"
																},
																"nativeSrc": "4843:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4843:58:0"
															},
															"nativeSrc": "4843:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4843:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4925:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4925:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4930:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4930:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4921:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:0"
																		},
																		"nativeSrc": "4921:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4937:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4937:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:0"
																},
																"nativeSrc": "4914:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4914:38:0"
															},
															"nativeSrc": "4914:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4914:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4972:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4977:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4977:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:0"
																},
																"nativeSrc": "4965:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4965:55:0"
															},
															"nativeSrc": "4965:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4965:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5044:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5044:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5049:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:0"
																		},
																		"nativeSrc": "5040:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5056:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5056:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:0"
																},
																"nativeSrc": "5033:28:0",
																"nodeType": "YulFunctionCall",
																"src": "5033:28:0"
															},
															"nativeSrc": "5033:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "5033:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5085:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5085:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5090:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5090:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5081:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:0"
																		},
																		"nativeSrc": "5081:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5111:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5111:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5116:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5116:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5107:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5107:3:0"
																				},
																				"nativeSrc": "5107:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5107:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5123:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5097:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5097:9:0"
																		},
																		"nativeSrc": "5097:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5074:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:0"
																},
																"nativeSrc": "5074:55:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:55:0"
															},
															"nativeSrc": "5074:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "5074:55:0"
														},
														{
															"nativeSrc": "5142:93:0",
															"nodeType": "YulAssignment",
															"src": "5142:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5173:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5173:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5178:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5178:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5169:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5169:3:0"
																				},
																				"nativeSrc": "5169:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5169:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5185:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5185:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5159:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5159:9:0"
																		},
																		"nativeSrc": "5159:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5192:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5192:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5155:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:0"
																},
																"nativeSrc": "5155:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5155:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5142:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5142:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "4821:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "5142:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "5056:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "4724:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4445:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4558:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4603:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4595:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4635:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4627:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4657:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4703:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4694:19:0"
									},
									"scope": 398,
									"src": "4549:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "5500:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5545:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5567:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "5517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5517:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "5510:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5257:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5370:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5415:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5407:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5489:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5481:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:19:0"
									},
									"scope": 398,
									"src": "5361:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6094:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6134:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "6150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "6111:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6111:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "6104:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5594:384:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "5992:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6075:18:0"
									},
									"scope": 398,
									"src": "5983:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6753:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6767:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6781:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "6767:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "6791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6767:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6763:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6798:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6854:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6846:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6846:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6846:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6860:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "6846:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "6869:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "6819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6826:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "6819:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6819:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "6812:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "6908:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6895:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6947:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6919:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6895:73:0"
											},
											{
												"AST": {
													"nativeSrc": "7003:87:0",
													"nodeType": "YulBlock",
													"src": "7003:87:0",
													"statements": [
														{
															"nativeSrc": "7017:63:0",
															"nodeType": "YulAssignment",
															"src": "7017:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7036:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7047:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7047:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:4:0",
																				"nodeType": "YulLiteral",
																				"src": "7057:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7043:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:0"
																		},
																		"nativeSrc": "7043:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7070:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7070:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7064:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7064:5:0"
																		},
																		"nativeSrc": "7064:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7064:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "7029:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:0"
																},
																"nativeSrc": "7029:51:0",
																"nodeType": "YulFunctionCall",
																"src": "7029:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "7017:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "7017:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7047:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7070:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "7017:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "7036:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "6978:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7115:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7115:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7103:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "7099:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "7127:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7148:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7155:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "7148:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7148:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "7141:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6171:421:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "6606:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6646:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6638:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6734:18:0"
									},
									"scope": 398,
									"src": "6597:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7934:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7987:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8003:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "7951:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "7944:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7196:565:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "7775:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7828:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7820:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7852:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7887:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:18:0"
									},
									"scope": 398,
									"src": "7766:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8681:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8704:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8691:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8743:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8715:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8691:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8803:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8809:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8789:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "8781:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "8774:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8030:455:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "8499:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8552:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8544:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8576:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "8611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:18:0"
									},
									"scope": 398,
									"src": "8490:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9161:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "9184:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "9171:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9195:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9300:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "9290:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9290:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9269:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "9261:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "9254:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "8831:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "8961:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "9104:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9096:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9150:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9142:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9141:19:0"
									},
									"scope": 398,
									"src": "8952:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9637:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9699:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "9654:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "9647:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "9333:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "9463:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9525:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9517:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9549:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9507:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9626:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9617:19:0"
									},
									"scope": 398,
									"src": "9454:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10441:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10464:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "10451:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "10483:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10492:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "10483:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10497:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10483:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10506:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "10483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10451:58:0"
											},
											{
												"AST": {
													"nativeSrc": "10577:81:0",
													"nodeType": "YulBlock",
													"src": "10577:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "10603:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "10603:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10617:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10617:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10625:2:0",
																				"nodeType": "YulLiteral",
																				"src": "10625:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10613:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:0"
																		},
																		"nativeSrc": "10613:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10630:2:0",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10640:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10640:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10634:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10634:5:0"
																		},
																		"nativeSrc": "10634:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "10591:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "10591:11:0"
																},
																"nativeSrc": "10591:57:0",
																"nodeType": "YulFunctionCall",
																"src": "10591:57:0"
															},
															"nativeSrc": "10591:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "10591:57:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "10603:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10640:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "10552:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "10674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "10667:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9754:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "10371:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10385:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10427:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10426:14:0"
									},
									"scope": 398,
									"src": "10362:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "11476:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11495:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11490:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "11490:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "11486:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "11518:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11518:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "11511:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "11636:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11641:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11636:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11650:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "11636:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "11629:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11629:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11671:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11728:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11760:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "11570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11574:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "11570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11570:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "11551:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10693:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "11347:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11392:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11384:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11429:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11416:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11462:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:14:0"
									},
									"scope": 398,
									"src": "11338:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:11023:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:11741:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"src/ContractFactory.sol": {
				"ast": {
					"absolutePath": "src/ContractFactory.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"ContractFactory": [
							615
						],
						"InitializationFailed": [
							527
						],
						"NotHR": [
							525
						]
					},
					"id": 616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 399,
							"src": "57:64:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Clones",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 398,
										"src": "65:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"errorSelector": "5c210ed5",
							"id": 525,
							"name": "NotHR",
							"nameLocation": "129:5:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 524,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "134:2:3"
							},
							"src": "123:14:3"
						},
						{
							"errorSelector": "19b991a8",
							"id": 527,
							"name": "InitializationFailed",
							"nameLocation": "144:20:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 526,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "164:2:3"
							},
							"src": "138:29:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ContractFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 615,
							"linearizedBaseContracts": [
								615
							],
							"name": "ContractFactory",
							"nameLocation": "178:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 530,
									"libraryName": {
										"id": 528,
										"name": "Clones",
										"nameLocations": [
											"206:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 398,
										"src": "206:6:3"
									},
									"nodeType": "UsingForDirective",
									"src": "200:25:3",
									"typeName": {
										"id": 529,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 532,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "246:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "231:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 531,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "231:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "71b727d5",
									"id": 534,
									"mutability": "mutable",
									"name": "hr",
									"nameLocation": "281:2:3",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "266:17:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 533,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e",
									"id": 540,
									"name": "ProxyCreated",
									"nameLocation": "296:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": false,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "317:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "309:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "director",
												"nameLocation": "332:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "324:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:3"
									},
									"src": "290:52:3"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "398:67:3",
										"statements": [
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 547,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "408:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "425:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "408:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "408:32:3"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "hr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "450:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 552,
														"name": "_hr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "455:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "450:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "450:8:3"
											}
										]
									},
									"id": 556,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "368:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "360:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_hr",
												"nameLocation": "393:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "385:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:38:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:3"
									},
									"scope": 615,
									"src": "348:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "489:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 559,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "507:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "511:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "507:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 561,
																"name": "hr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "521:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "507:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "NotHR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "525:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "525:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "499:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "499:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "499:34:3"
											},
											{
												"id": 567,
												"nodeType": "PlaceholderStatement",
												"src": "543:1:3"
											}
										]
									},
									"id": 569,
									"name": "onlyHR",
									"nameLocation": "480:6:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "486:2:3"
									},
									"src": "471:80:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "716:349:3",
										"statements": [
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "726:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 583,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "734:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "749:5:3",
															"memberName": "clone",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 22,
															"src": "734:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$attached_to$_t_address_$",
																"typeString": "function (address) returns (address)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "734:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "726:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "726:30:3"
											},
											{
												"assignments": [
													589,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "773:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "768:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 588,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 601,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e697469616c697a6528616464726573732c616464726573732c616464726573732c737472696e6729",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "850:44:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_65e8e4f4a86536932093cb22241351740de1f361326f4718d1e87958d41ccf01",
																		"typeString": "literal_string \"initialize(address,address,address,string)\""
																	},
																	"value": "initialize(address,address,address,string)"
																},
																{
																	"id": 595,
																	"name": "hr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "896:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 596,
																	"name": "_director",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "900:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 597,
																	"name": "_priceFeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "911:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "_departmentName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "923:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_65e8e4f4a86536932093cb22241351740de1f361326f4718d1e87958d41ccf01",
																		"typeString": "literal_string \"initialize(address,address,address,string)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 592,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "809:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "813:19:3",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "809:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "809:143:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 590,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "785:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "791:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "785:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:177:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "767:195:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "980:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 604,
																"name": "InitializationFailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "989:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "989:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "972:40:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 609,
															"name": "proxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1041:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "_director",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "1048:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 608,
														"name": "ProxyCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "1028:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "EmitStatement",
												"src": "1023:35:3"
											}
										]
									},
									"functionSelector": "88d6f08d",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 577,
												"name": "onlyHR",
												"nameLocations": [
													"673:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "673:6:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "673:6:3"
										}
									],
									"name": "createProxy",
									"nameLocation": "566:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "_director",
												"nameLocation": "586:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "578:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "605:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "597:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_departmentName",
												"nameLocation": "631:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "617:29:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 574,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "617:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:70:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "705:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "697:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:15:3"
									},
									"scope": 615,
									"src": "557:508:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 616,
							"src": "169:898:3",
							"usedErrors": [
								507,
								513,
								525,
								527
							],
							"usedEvents": [
								540
							]
						}
					],
					"src": "32:1036:3"
				},
				"id": 3
			}
		}
	}
}